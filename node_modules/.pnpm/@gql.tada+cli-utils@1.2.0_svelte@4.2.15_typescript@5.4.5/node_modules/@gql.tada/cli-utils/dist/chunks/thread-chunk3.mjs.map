{"version":3,"file":"thread-chunk3.mjs","sources":["../../src/commands/check/thread.ts"],"sourcesContent":["import * as path from 'node:path';\nimport { Project, ts } from 'ts-morph';\n\nimport type { GraphQLSPConfig } from '@gql.tada/internal';\nimport { load } from '@gql.tada/internal';\nimport { init, getGraphQLDiagnostics } from '@0no-co/graphqlsp/api';\n\nimport { createPluginInfo, getFilePosition, loadVirtualCode } from '../../ts';\nimport { expose } from '../../threads';\n\nimport type { Severity, DiagnosticMessage, DiagnosticSignal } from './types';\n\nexport interface DiagnosticsParams {\n  rootPath: string;\n  configPath: string;\n  pluginConfig: GraphQLSPConfig;\n}\n\nasync function* _runDiagnostics(\n  params: DiagnosticsParams\n): AsyncIterableIterator<DiagnosticSignal> {\n  init({ typescript: ts });\n  const projectPath = path.dirname(params.configPath);\n  const loader = load({ origin: params.pluginConfig.schema, rootPath: projectPath });\n  const project = new Project({ tsConfigFilePath: params.configPath });\n\n  const getVirtualPosition = await loadVirtualCode(projectPath, project, ts);\n  if (!!getVirtualPosition) {\n    yield { kind: 'EXTERNAL_WARNING' };\n  }\n\n  const pluginInfo = createPluginInfo(\n    project,\n    params.pluginConfig,\n    projectPath,\n    getVirtualPosition\n  );\n  const loadResult = await loader.load();\n  const schemaRef = { current: loadResult.schema, version: 1 };\n\n  // Filter source files by whether they're under the relevant root path\n  const sourceFiles = project.getSourceFiles().filter((sourceFile) => {\n    const filePath = path.resolve(projectPath, sourceFile.getFilePath());\n    const relative = path.relative(params.rootPath, filePath);\n    return !relative.startsWith('..');\n  });\n\n  yield {\n    kind: 'FILE_COUNT',\n    fileCount: sourceFiles.length,\n  };\n\n  for (const { compilerNode: sourceFile } of sourceFiles) {\n    let filePath = sourceFile.fileName;\n    const diagnostics = getGraphQLDiagnostics(filePath, schemaRef, pluginInfo);\n    const messages: DiagnosticMessage[] = [];\n\n    if (diagnostics && diagnostics.length) {\n      for (const diagnostic of diagnostics) {\n        if (\n          !('messageText' in diagnostic) ||\n          typeof diagnostic.messageText !== 'string' ||\n          !diagnostic.file\n        ) {\n          continue;\n        }\n        let severity: Severity = 'info';\n        if (diagnostic.category === ts.DiagnosticCategory.Error) {\n          severity = 'error';\n        } else if (diagnostic.category === ts.DiagnosticCategory.Warning) {\n          severity = 'warn';\n        }\n        const position = getFilePosition(\n          sourceFile,\n          diagnostic.start,\n          diagnostic.length,\n          getVirtualPosition\n        );\n        filePath = position.file;\n        messages.push({\n          severity,\n          message: diagnostic.messageText,\n          file: position.file,\n          line: position.line,\n          col: position.col,\n          endLine: position.endLine,\n          endColumn: position.endColumn,\n        });\n      }\n    }\n\n    yield {\n      kind: 'FILE_DIAGNOSTICS',\n      filePath,\n      messages,\n    };\n  }\n}\n\nexport const runDiagnostics = expose(_runDiagnostics);\n"],"names":["runDiagnostics","expose","async","_runDiagnostics","params","init","typescript","ts","projectPath","path","dirname","configPath","loader","load","origin","pluginConfig","schema","rootPath","project","Project","tsConfigFilePath","getVirtualPosition","loadVirtualCode","kind","pluginInfo","createPluginInfo","schemaRef","current","version","sourceFiles","getSourceFiles","filter","sourceFile","filePath","resolve","getFilePath","relative","startsWith","fileCount","length","compilerNode","fileName","diagnostics","getGraphQLDiagnostics","messages","diagnostic","messageText","file","severity","category","DiagnosticCategory","Error","Warning","position","getFilePosition","start","push","message","line","col","endLine","endColumn"],"mappings":";;;;;;;;;;;;IAmGaA,IAAiBC,GAjF9BC,gBAAgBC,gBACdC;EAEAC,EAAK;IAAEC,YAAYC;;EACnB,IAAMC,IAAcC,EAAKC,QAAQN,EAAOO;EACxC,IAAMC,IAASC,EAAK;IAAEC,QAAQV,EAAOW,aAAaC;IAAQC,UAAUT;;EACpE,IAAMU,IAAU,IAAIC,EAAQ;IAAEC,kBAAkBhB,EAAOO;;EAEvD,IAAMU,UAA2BC,EAAgBd,GAAaU,GAASX;EACvE,IAAMc;UACE;MAAEE,MAAM;;;EAGhB,IAAMC,IAAaC,EACjBP,GACAd,EAAOW,cACPP,GACAa;EAGF,IAAMK,IAAY;IAAEC,gBADKf,EAAOC,QACQG;IAAQY,SAAS;;EAGzD,IAAMC,IAAcX,EAAQY,iBAAiBC,QAAQC;IACnD,IAAMC,IAAWxB,EAAKyB,QAAQ1B,GAAawB,EAAWG;IAEtD,QADiB1B,EAAK2B,SAAShC,EAAOa,UAAUgB,GAC/BI,WAAW;AAAK;QAG7B;IACJd,MAAM;IACNe,WAAWT,EAAYU;;EAGzB,KAAK,KAAQC,cAAcR,MAAgBH,GAAa;IACtD,IAAII,IAAWD,EAAWS;IAC1B,IAAMC,IAAcC,EAAsBV,GAAUP,GAAWF;IAC/D,IAAMoB,IAAgC;IAEtC,IAAIF,KAAeA,EAAYH;MAC7B,KAAK,IAAMM,KAAcH,GAAa;QACpC,MACI,iBAAiBG,MACe,mBAA3BA,EAAWC,gBACjBD,EAAWE;UAEZ;;QAEF,IAAIC,IAAqB;QACzB,IAAIH,EAAWI,aAAa1C,EAAG2C,mBAAmBC;UAChDH,IAAW;eACN,IAAIH,EAAWI,aAAa1C,EAAG2C,mBAAmBE;UACvDJ,IAAW;;QAEb,IAAMK,IAAWC,EACftB,GACAa,EAAWU,OACXV,EAAWN,QACXlB;QAEFY,IAAWoB,EAASN;QACpBH,EAASY,KAAK;UACZR;UACAS,SAASZ,EAAWC;UACpBC,MAAMM,EAASN;UACfW,MAAML,EAASK;UACfC,KAAKN,EAASM;UACdC,SAASP,EAASO;UAClBC,WAAWR,EAASQ;;AAExB;;UAGI;MACJtC,MAAM;MACNU;MACAW;;AAEJ;AACF;;"}