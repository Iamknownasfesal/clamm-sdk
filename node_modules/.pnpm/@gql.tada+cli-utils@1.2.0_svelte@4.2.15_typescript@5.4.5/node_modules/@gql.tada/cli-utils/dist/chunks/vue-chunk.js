var e = require("@vue/language-core");

var r = require("@vue/compiler-dom");

function _interopNamespaceDefault(e) {
  var r = Object.create(null);
  if (e) {
    Object.keys(e).forEach((function(t) {
      if ("default" !== t) {
        var a = Object.getOwnPropertyDescriptor(e, t);
        Object.defineProperty(r, t, a.get ? a : {
          enumerable: !0,
          get: function() {
            return e[t];
          }
        });
      }
    }));
  }
  r.default = e;
  return r;
}

var t = _interopNamespaceDefault(e);

var a = _interopNamespaceDefault(r);

var o = t.VueGeneratedCode || t.VirtualCode;

var i = t.resolveVueCompilerOptions({});

var u;

exports.createVirtualCode = (r, t, n) => {
  if (!u) {
    u = e.getDefaultVueLanguagePlugins({
      modules: {
        typescript: n,
        "@vue/compiler-dom": a
      },
      compilerOptions: {},
      codegenStack: !1,
      globalTypesHolder: void 0,
      vueCompilerOptions: i
    });
  }
  var c = new o(r, "vue", t, i, u, n, !1);
  for (var l of e.forEachEmbeddedCode(c)) {
    if (l.id.startsWith("script_")) {
      return l;
    }
  }
};
//# sourceMappingURL=vue-chunk.js.map
