import * as e from "@vue/language-core";

import { getDefaultVueLanguagePlugins as r, forEachEmbeddedCode as o } from "@vue/language-core";

import * as i from "@vue/compiler-dom";

var a = e.VueGeneratedCode || e.VirtualCode;

var t = e.resolveVueCompilerOptions({});

var p;

var createVirtualCode = (e, m, v) => {
  if (!p) {
    p = r({
      modules: {
        typescript: v,
        "@vue/compiler-dom": i
      },
      compilerOptions: {},
      codegenStack: !1,
      globalTypesHolder: void 0,
      vueCompilerOptions: t
    });
  }
  var l = new a(e, "vue", m, t, p, v, !1);
  for (var u of o(l)) {
    if (u.id.startsWith("script_")) {
      return u;
    }
  }
};

export { createVirtualCode };
//# sourceMappingURL=vue-chunk.mjs.map
